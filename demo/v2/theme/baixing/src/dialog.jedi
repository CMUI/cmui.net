:import _skeleton

	#base::after
		- $data->pageId = 'dialog'
		- $data->pageTitle = 'Dialog'

	#main
		section
			h2 "弹框"
			div.intro
				p "“弹框” 亦称 “对话框”，是最常见的 UI 交互元素之一。"
				p "CMUI 只支持模态弹框。模态弹框是指弹框将下层的页面内容遮盖，避免用户与弹框之外的内容进行交互。"
			div.intro
				h4 > strong '注意'
				ul.cm-text
					li "此组件依赖 CMUI 的 Mask 组件。"
			hr
			div.intro
				p "在使用弹框的 JS API 之前，需要在页面中写好（或由 JS 动态生成）相应的弹框元素。弹框元素的结构大致如下："
				pre > code
					'div.cm-dialog  //弹框的容器
							a.cm-dialog-close-btn @href="#"  //关闭按钮（注 1）
							div.cm-dialog-img        //头图（注 2）
							header.cm-dialog-header  //弹框标题栏（注 2）
								h2.cm-dialog-header-title  //标题文字
							main.cm-dialog-content   //弹框主体（注 3）
								...
							footer.cm-dialog-footer  //弹框底栏（注 3）
								...

				p
					strong '注 1'
					'：“关闭按钮” 会由 JS API 自动生成，无需手工编写。'
				p
					strong '注 2'
					'：有此标注的两个元素至少应该存在一个。'
				p
					strong '注 3'
					'：有此标注的各个元素均为可选。'

		section.style
			h2 "样式"
			div.intro
				p
					"弹框并不是静态的布局元素，且默认不显示。但由于弹框有多种样式组合，为便于演示，下面把弹框以静态元素的形式展示出来。"
			section
				h3 '仅有头图'
				div.cm-dialog
					a.cm-dialog-close-btn @href="#"
					div.cm-dialog-img

				div.intro
					p
						'题图可由 '
						code '<img>'
						' 标签来实现，也可由背景图片来实现。无论使用哪种方法，都需要指定图片的高度。'
					p
						'题图的最顶部会被切圆角。'
			section
				h3 '仅有标题'
				div.cm-dialog
					a.cm-dialog-close-btn @href="#"
					header.cm-dialog-header
						h2.cm-dialog-header-title
							'标题文字'
			section
				h3 '仅有内容'
				div.cm-dialog
					a.cm-dialog-close-btn @href="#"
					main.cm-dialog-content
						'内容文字'
			section
				h3 '头图 + 标题'
				div.cm-dialog
					a.cm-dialog-close-btn @href="#"
					div.cm-dialog-img
					header.cm-dialog-header
						h2.cm-dialog-header-title
							'标题文字'
			section
				h3 '头图 + 内容'
				div.cm-dialog
					a.cm-dialog-close-btn @href="#"
					div.cm-dialog-img
					main.cm-dialog-content
						'内容文字'
			section
				h3 '标题 + 内容'
				div.cm-dialog
					a.cm-dialog-close-btn @href="#"
					header.cm-dialog-header
						h2.cm-dialog-header-title
							'标题文字'
					main.cm-dialog-content
						'内容文字'
			section
				h3 '标题 + 底栏'
				div.cm-dialog
					a.cm-dialog-close-btn @href="#"
					header.cm-dialog-header
						h2.cm-dialog-header-title
							'标题文字'
					footer.cm-dialog-footer
						a.cm-btn.cm-btn-primary @href="#"
							'确定'
			section
				h3 '头图 + 底栏'
				div.cm-dialog
					a.cm-dialog-close-btn @href="#"
					div.cm-dialog-img
					footer.cm-dialog-footer
						a.cm-btn.cm-btn-primary @href="#"
							'确定'
			section
				h3 '标题 + 内容 + 底栏'
				div.cm-dialog
					a.cm-dialog-close-btn @href="#"
					header.cm-dialog-header
						h2.cm-dialog-header-title
							'标题文字'
					main.cm-dialog-content
						'内容文字'
					footer.cm-dialog-footer
						a.cm-btn.cm-btn-primary @href="#"
							'确定'
						a.cm-btn.cm-btn-primary.cm-btn-bordered @href="#"
							'取消'
			section
				h3 '头图 + 自动关闭提示栏'
				div.cm-dialog
					a.cm-dialog-close-btn @href="#"
					div.cm-dialog-img
					div.cm-dialog-auto-hide
						span.cm-dialog-auto-hide-countdown
							'?'
						' 秒后自动关闭……'
				div.intro
					p
						'当 JS API 设置了弹框的自动关闭功能时，“自动关闭提示栏” 会自动出现，无需手工编写。'
			section
				h3 '标题 + 自动关闭提示栏'
				div.cm-dialog
					a.cm-dialog-close-btn @href="#"
					header.cm-dialog-header
						h2.cm-dialog-header-title
							'标题文字'
					div.cm-dialog-auto-hide
						span.cm-dialog-auto-hide-countdown
							'?'
						' 秒后自动关闭……'
			section
				h3 '标题 + 内容 + 自动关闭提示栏'
				div.cm-dialog
					a.cm-dialog-close-btn @href="#"
					header.cm-dialog-header
						h2.cm-dialog-header-title
							'标题文字'
					main.cm-dialog-content
						'内容文字'
					div.cm-dialog-auto-hide
						span.cm-dialog-auto-hide-countdown
							'?'
						' 秒后自动关闭……'
			section
				h3 '标题 + 内容 + 底栏 + 自动关闭提示栏'
				div.cm-dialog
					a.cm-dialog-close-btn @href="#"
					header.cm-dialog-header
						h2.cm-dialog-header-title
							'标题文字'
					main.cm-dialog-content
						'内容文字'
					footer.cm-dialog-footer
						a.cm-btn.cm-btn-primary @href="#"
							'确定'
						a.cm-btn.cm-btn-primary.cm-btn-bordered @href="#"
							'取消'
					div.cm-dialog-auto-hide
						span.cm-dialog-auto-hide-countdown
							'?'
						' 秒后自动关闭……'

		section
			h2 "JS API"
			div.intro
				p '在 JS 中调用以下 API，即可触发相应的功能。'
			div.intro
				p
					'各参数的含义详见 '
					a @@ href="https://github.com/CMUI/doc/issues/3" target="_blank"
						'API 文档'
					'。'
			section
				h3 '显示'
				dl.code-result
					dt > code "CMUI.dialog.show(elem, options)"
					dd
						a.cm-btn @href="#" @data-action="demo-dialog-show"
							"显示"
					dd
						a.cm-btn @href="#" @data-action="demo-dialog-show-auto-hide"
							"显示并设置自动隐藏"
			section
				h3 '隐藏'
				dl.code-result
					dt > code "CMUI.dialog.hide()"
					dd
						p '此方法可以关闭当前显示的弹框。'
					dd
						p '请在弹出的弹框中，点击关闭按钮来测试隐藏效果。'
				div.intro
					p
						strong '注意'
						'：在默认情况下，点击遮罩层并不能隐藏弹框。'
			section
				h3 '构造一个弹框'
				dl.code-result
					dt > code "CMUI.dialog.create(options)"
					dd '可以通过这个 API 来动态构造一个弹框出来。'
					dd
						'构造完成之后，这个新弹框会被添加到 DOM 中，但默认不显示。我们需要显式调用 '
						code '.show()'
						' 方法来将其打开。以下示例按钮包含了构造和显示两个步骤。'
					dd
						a.cm-btn @href="#" @data-action="demo-dialog-create-and-show"
							"构造并显示"


	#widgets
		div.cm-dialog#demo-dialog
			header.cm-dialog-header
				h2.cm-dialog-header-title '弹框'
			main.cm-dialog-content.cm-scrollable-content
				p '弹框的内容'
				p '弹框的内容'
				p '弹框的内容'
			footer.cm-dialog-footer
				button.cm-btn.cm-btn-primary @data-action="demo-dialog-show-alt"
					'打开另一个弹框'
				button.cm-btn.cm-btn-primary.cm-btn-bordered @data-action="cm-dialog-hide"
					'取消'

		div.cm-dialog#demo-dialog-alt
			header.cm-dialog-header
				h2.cm-dialog-header-title '另一个弹框'
			main.cm-dialog-content.cm-scrollable-content
				p '关闭本弹框后将返回上一个弹框。'
			footer.cm-dialog-footer
				button.cm-btn.cm-btn-primary @data-action="cm-dialog-hide"
					'关闭'
