:import _skeleton

	#base::after
		- $data->pageId = 'panel'
		- $data->pageTitle = 'Panel'

	#main
		section
			h2 "浮出面板"
			div.intro
				p "浮出面板（以下简称 “面板”）是指视口底部浮出操作面板，其外观和行为类似于 iOS 系统上的 ActionSheet。其内容不仅仅局限于按钮或菜单，可以任意定制。"
			div.intro
				h4 > strong '注意'
				ul.cm-text
					li "此组件依赖 CMUI 的 Mask 组件。"
					li
						"此组件依赖 Zepto.js 的 "
						code "fx"
						" 模块。此模块不在 Zepto 的默认包中，需要手动加载。"
			div.intro
				p "在使用浮出面板的 JS API 之前，需要在页面中写好（或由 JS 动态生成）相应的面板元素。面板元素的结构大致如下："
				pre > code
					'div.cm-panel  //浮出面板的容器
							header.cm-panel-header        //标题栏
								h2.cm-panel-header-title  //标题文字
								a.cm-panel-header-btn.cm-panel-header-left.cm-panel-header-btn-minor  //标题栏的左按钮
								a.cm-panel-header-btn.cm-panel-header-right  //标题栏的右按钮
							main.cm-panel-content.cm-scrollable-content  //内容主体
								ul.cm-list
									...
			div.intro
				p
					"浮出面板并不是静态的布局元素，且默认不显示，因此，如果要看它的样式，还是要由 JS API 来打开它，才能看到它的庐山真面目。"

		section
			h2 "JS API"
			div.intro
				p '在 JS 中调用以下 API，即可触发相应的功能。'
			div.intro
				p '各参数的含义详见 API 文档（暂未完成）。'
			section
				h3 '显示'
				dl.code-result
					dt > code "CMUI.panel.show(elem, options)"
					dd
						a.cm-btn @href="#" @data-action="demo-panel-show"
							"显示"
			section
				h3 '隐藏'
				dl.code-result
					dt > code "CMUI.panel.hide(options)"
					dd
						p '请在浮出的面板中，点击标题栏中的左右按钮来测试隐藏效果。'
				div.intro
					p
						strong '注意'
						'：在默认情况下，点击遮罩层并不能隐藏浮出面板。'
			section
				h3 '切至其它面板'
				dl.code-result
					dt > code "CMUI.panel.switchTo(elem, options)"
					dd '请在浮出的面板中，点击 “切至其它面板” 菜单来测试效果。'
			section
				h3 '切回上一面板'
				dl.code-result
					dt > code "CMUI.panel.switchBack(options)"
					dd '请在切换后的面板中，点击标题栏中的 “返回” 按钮来测试效果。'

		section
			h2 "HTML API"
			div.intro
				p '本组件还支持声明式的 HTML API。只需要在触发动作的元素（以下简称 “触发元素”）身上加上特定的属性，该元素就具备相应的功能了。'
			div.intro
				p '各参数的含义详见 API 文档（暂未完成）。'
			section
				h3 '显示'
				div.intro
					p > code '[data-action="cm-panel-show"]'
					p '触发元素的示例如下：'
					pre > code
						'a  //触发元素
								@data-action="cm-panel-show"  //指定显示动作
								@href="#demo-panel"           //指定面板元素的 ID
					p '或者：'
					pre > code
						'button  //触发元素
								@data-action="cm-panel-show"  //指定显示动作
								@data-target="#demo-panel"    //指定面板元素的 ID
			section
				h3 '隐藏'
				div.intro
					p > code '[data-action="cm-panel-hide"]'
					pre > code
						'a  //触发元素
								@data-action="cm-panel-hide"  //指定隐藏动作
								@href="#"  //置空，无需指定面板元素
					p '或者：'
					pre > code
						'button  //触发元素
								@data-action="cm-panel-hide"  //指定隐藏动作
			section
				h3 '切至其它面板'
				div.intro
					p > code '[data-action="cm-panel-switch-to"]'
					pre > code
						'a  //触发元素
								@data-action="cm-panel-switch-to"  //指定切换动作
								@href="#demo-panel-alt"  //指定另一面板元素的 ID
					p
						'同理，用 '
						code '<button>'
						' 元素作为触发元素也是可以的。'
			section
				h3 '切回上一面板'
				div.intro
					p > code '[data-action="cm-panel-switch-back"]'
					pre > code
						'a  //触发元素
								@data-action="cm-panel-switch-back"  //指定切回动作
								@href="#"  //置空，无需指定上一面板元素
					p
						'同理，用 '
						code '<button>'
						' 元素作为触发元素也是可以的。'


	#widgets
		div.cm-panel#demo-panel
			header.cm-panel-header
				h2.cm-panel-header-title '浮出面板'
				a.cm-panel-header-btn.cm-panel-header-left.cm-panel-header-btn-minor @href='#' @data-action="demo-panel-hide"
					'取消'
				a.cm-panel-header-btn.cm-panel-header-right @href='#' @data-action="demo-panel-hide"
					'确定'
			main.cm-panel-content.cm-scrollable-content
				ul.cm-list
					li.cm-list-with-right-arrow
						a
							@href='#'
							@data-action="demo-panel-switch-to"
							'切至其它面板'
					li > p '第一个面板的列表项'
					li > p '第一个面板的列表项'

		div.cm-panel#demo-panel-alt
			header.cm-panel-header
				h2.cm-panel-header-title '另一个面板'
				a.cm-panel-header-btn.cm-panel-header-left.cm-panel-header-btn-minor @href='#' @data-action="demo-panel-switch-back"
					'返回'
				a.cm-panel-header-btn.cm-panel-header-right @href='#' @data-action="demo-panel-hide"
					'确定'
			main.cm-panel-content.cm-scrollable-content
				ul.cm-list
					li > p '第二个面板的列表项'
					li > p '第二个面板的列表项'
